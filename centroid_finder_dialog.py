# -*- coding: utf-8 -*-
"""
/***************************************************************************
 centroidfinderDialog
                                 A QGIS plugin
 Calcula o centroid em relação a uma camada de pontos
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2024-09-24
        git sha              : $Format:%H$
        copyright            : (C) 2024 by Andre Sachetti
        email                : andresachetti1@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'centroid_finder_dialog_base.ui'))


"""class centroidfinderDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        Constructor.
        super(centroidfinderDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)"""

from qgis.PyQt.QtWidgets import QDialog
from qgis.core import QgsProject
#from .plugin_name_dialog_base import Ui_PluginNameDialogBase

class centroidfinderDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Construtor do diálogo"""
        super(centroidfinderDialog, self).__init__(parent)
        self.setupUi(self)

        # Preencher a lista de camadas carregadas no QGIS
        self.populate_layers()

    def populate_layers(self):
        """Preenche o combo box com as camadas vetoriais disponíveis no projeto QGIS."""
        layers = QgsProject.instance().mapLayers().values()
        for layer in layers:
            if layer.type() == layer.VectorLayer:
                self.comboBox_inputLayer.addItem(layer.name(), layer)

    def get_input_layer(self):
        """Retorna a camada de entrada selecionada."""
        return self.comboBox_inputLayer.currentData()

    def get_output_layer_name(self):
        """Retorna o nome da camada de saída inserido pelo usuário."""
        return self.lineEdit_outputLayer.text()
